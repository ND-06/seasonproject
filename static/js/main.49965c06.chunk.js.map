{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","sentence","iconName","winter","SeasonDisplay","props","season","lat","month","getSeason","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","style","fontSize","color","Loader","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Loader","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4LAGMA,SAAe,CACnBC,OAAQ,CACNC,SAAU,0DACVC,SAAU,OAEZC,OAAQ,CACNF,SAAU,4CACVC,SAAU,eA6BCE,EAnBO,SAAAC,GACpB,IAAMC,EAPU,SAACC,EAAKC,GACtB,GAAIA,EAAQ,GAAKA,EAAQ,EACvB,OAAOD,EAAM,EAAI,SAAW,SAKfE,CAAUJ,EAAME,KAAK,IAAIG,MAAOC,YADlBC,EAEEb,EAAaO,GAApCL,EAFqBW,EAErBX,SAAUC,EAFWU,EAEXV,SAClB,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBX,IAChCO,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBf,EAAvB,WACZW,EAAAC,EAAAC,cAAA,KACEG,MAAO,CACLC,SAAU,OACVC,MAAkB,WAAXd,EAAsB,QAAU,SAGxCL,GAEHY,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBf,EAAxB,aChCZmB,EAAS,SAAAhB,GACb,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBX,EAAMiB,WAKjDD,EAAOE,aAAe,CACpBD,QAAS,cAGID,QCTTG,6MACJC,MAAQ,CACNlB,IAAK,KACLmB,aAAc,uFAGI,IAAAC,EAAAC,KAClBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAE3B,IAAK0B,EAASE,OAAOC,YACjD,SAAAC,GAAG,OAAIV,EAAKO,SAAS,CAAER,aAAcW,EAAIf,6CAK3C,OAAIM,KAAKH,MAAMlB,MAAQqB,KAAKH,MAAMC,aACzBb,EAAAC,EAAAC,cAACuB,EAAD,CAAe/B,IAAKqB,KAAKH,MAAMlB,OAEnCqB,KAAKH,MAAMlB,KAAOqB,KAAKH,MAAMC,aAE9Bb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,kDAAAC,OACEW,KAAKH,MAAMC,eAIVb,EAAAC,EAAAC,cAACwB,EAAD,CAAQjB,QAAQ,iDAxBTkB,IAAMC,WA2BxBC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.49965c06.chunk.js","sourcesContent":["import React from 'react';\nimport './SeasonDisplay.css';\n\nconst seasonConfig = {\n  summer: {\n    sentence: 'It is so hot, lets make a dive into the swimming pool !',\n    iconName: 'sun'\n  },\n  winter: {\n    sentence: 'Brrr, it is so cold, lets go to the Bed !',\n    iconName: 'snowflake'\n  }\n};\n\nconst getSeason = (lat, month) => {\n  if (month > 3 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  }\n};\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const { sentence, iconName } = seasonConfig[season];\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`icon-left massive ${iconName} icon`} />\n      <p\n        style={{\n          fontSize: '24px',\n          color: season === 'summer' ? 'white' : 'blue'\n        }}\n      >\n        {sentence}\n      </p>\n      <i className={`icon-right massive ${iconName} icon`} />\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n","import React from 'react';\n\nconst Loader = props => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nLoader.defaultProps = {\n  message: 'Loading...'\n};\n\nexport default Loader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Loader from './Loader';\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    errorMessage: ''\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  render() {\n    if (this.state.lat && !this.state.errorMessage) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n    if (!this.state.lat && this.state.errorMessage) {\n      return (\n        <span className=\"error-message\">{`Sorry but we are unable to display this page : ${\n          this.state.errorMessage\n        }`}</span>\n      );\n    }\n    return <Loader message=\"Please accept the location request...\" />;\n  }\n}\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}